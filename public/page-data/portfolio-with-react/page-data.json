{"componentChunkName":"component---src-templates-blog-post-js","path":"/portfolio-with-react/","result":{"data":{"markdownRemark":{"html":"<p>This article is also cross-posted in —</p>\n<p>DEV - <a href=\"https://dev.to/flexdinesh/i-re-wrote-my-portfolio-and-added-some-magic-22n7\">I Created My Portfolio with React and Some Magic</a></p>\n<p>HackerNoon - <a href=\"https://hackernoon.com/i-created-my-portfolio-with-react-and-some-magic-fda27ba06a06\">I Created My Portfolio with React and Some Magic</a></p>\n<p>codeburst - <a href=\"https://codeburst.io/i-created-my-portfolio-with-react-and-some-magic-fe661302ce4c\">I Created My Portfolio with React and Some Magic</a></p>\n<hr>\n<p><img src=\"https://image.ibb.co/erwyaS/portfolio.png\" alt=\"Dinesh Pandiyan - Dev Landing Page\"></p>\n<p><em><strong>TL;DR</strong> - I re-wrote my <a href=\"https://flexdinesh.github.io\">portfolio</a> in React and added some niche tricks to make it look all shiny and rad. Everytime you refresh the page, a new look will be loaded.</em></p>\n<p>This whole write-up is based off this site - <a href=\"https://flexdinesh.github.io/\">Dinesh Pandiyan | Web Dev</a></p>\n<p>A few weeks back I created <a href=\"https://github.com/flexdinesh/dev-landing-page\">Dev Landing Page</a> and wrote a <a href=\"https://dev.to/flexdinesh/create-your-developer-landing-page-with-github-pages---42jk\">blog post</a> about it. In less than a week, the repo got over <strong>150 stars</strong> and got featured in various articles. I guess people liked it. I created my portfolio on top of it.</p>\n<p>I am no UI expert but in recent times I've took a liking towards <strong>responsive design</strong>, <strong>animations</strong>, <strong>flexbox</strong>, and other fancy CSS features. So I thought I'd take my UI skills for a spin and build my portfolio along the way. While looking for inspiration, I stumbled across <a href=\"https://dev.to/aspittel\">Ali Spittel's</a> post <a href=\"https://dev.to/aspittel/how-i-re-wrote-my-portfolio-site-cg\">How I Re-Wrote my Portfolio Site</a>. <a href=\"https://www.alispit.tel\">Her portfolio</a> looks pretty darn awesome and gives you the <em>'wow'</em> feel. I, then, embarked on a journey to build something that gives a similar vibe and a <strong>magical feel</strong>.</p>\n<p>I wanted to build everything <strong>from scratch without the help of any UI libraries/frameworks</strong>, except <strong>React</strong> though, because I love how React simplifies the whole web development process. I had so much fun building every single piece of my portfolio alongside learning so many new things. I'm gonna list down a few of my favorite parts of the site and what I learnt from them.</p>\n<ul>\n<li>Flexbox Layout</li>\n<li>Theme and React's context API</li>\n<li>Responsive Design</li>\n<li>Parallax Background</li>\n<li>Animations</li>\n<li>Browser Specific Code</li>\n</ul>\n<h2>Flexbox Layout</h2>\n<p>The whole website is laid out with <strong>Flexbox</strong>.</p>\n<blockquote>\n<p>Flexbox makes putting things in place so much easier</p>\n</blockquote>\n<p>CSS Grid and Flexbox have been the talk of the town lately. Still the support for CSS Grid is not very good but almost all the <em>de-facto</em> browsers today support flexbox. So I think it's pretty safe to implement the layout with Flexbox rather than Grid.</p>\n<p>Flexbox is all about containers and children. I used this <a href=\"http://yoksel.github.io/flex-cheatsheet/\">flex-cheatsheet</a> as a reference while building the layout and things seem pretty straight forward.</p>\n<p>One thing what bugs me about Flexbox is the <code>flex</code> property. I have used,</p>\n<p><code>flex: 1 0 auto;</code></p>\n<p><code>flex: auto;</code></p>\n<p><code>flex: 1;</code></p>\n<p>in a lot of places in the site but still couldn't figure out how it exactly behaves. Most of the times, it's a trial and error usage. Need to pick up on these properties and maybe I'll write a post about it soon.</p>\n<h2>Theme and React's Context API</h2>\n<p>While deciding on the theme for the site, I kept <em>juggling</em> between two themes constantly. One day I'd have one, then the other day I'll replace my Sass theme definitions with the other theme. Turns out, I couldn't pick one and wanted to have them both.</p>\n<p><strong>Then a crazy idea popped in my head</strong> - <em>Why not have both and alternate between them?</em></p>\n<p>I explored on ways to do it with React and settled on <strong>React's Context API</strong>. We could easily argue to have Redux instead, but I have worked way too much with Redux and wanted to get my hands dirty with <strong>React without Redux</strong>. Context API is a bit of a <em>non-ideal way to do things</em> but it got the job done for me and I'm happy with it. I will probably rewrite this with React 16.3's new Context API soon.</p>\n<p>After playing around for a while, I ended up with <strong>16 awesome themes</strong> - <strong>10 light themes</strong> and <strong>6 dark themes</strong>.</p>\n<p>Of all these, <strong>1 of my 3 favorite themes will be applied when the site loads</strong>. And when you click the <strong>magic wand</strong>, <strong>1 of the 16 themes will be applied</strong>.</p>\n<p>Try and see if you could tell all 16 themes apart. Trust me, it's not that easy : )</p>\n<p><strong><em>Everytime you refresh the page, a new look will be loaded. I gotta say, theme magic is my most favorite feature of the site</em></strong> ✨</p>\n<h2>Responsive Design</h2>\n<p><strong>Sass</strong> could be a powerful tool if you know how to use it right. I recently started exploring <strong>Sass mixins</strong> and it helped me design and refactor responsive layouts without breaking a sweat.</p>\n<p>I have come up with standard, re-usable sass breakpoint mixins. You can find the entire mixin code here - <a href=\"https://github.com/flexdinesh/flexdinesh.github.io/blob/dev/src/styles/_breakpoints.scss\">Sass breakpoint mixins</a></p>\n<p>Writing media queries are a lot easier with these mixins.</p>\n<pre><code class=\"language-scss\">.content-grid {\n  margin: 0 auto;\n  width: calc(100% - 5rem);\n\n  @include breakpoint-medium-up {\n    width: calc(100% - 5rem);\n  }\n\n  @include breakpoint-large-up {\n    width: calc(100% - 10rem);\n  }\n\n  @include breakpoint-xlarge-up {\n    width: calc(100% - 20rem);\n  }\n}\n</code></pre>\n<h2>Parallax Background</h2>\n<p>I've seen <em>parallax</em> tagged posts and codepens quite a bit but never tried my hand at it. I got inspired from one of the codepens and ended up with my own version - <a href=\"https://codepen.io/flexdinesh/full/GxNazP/\">Parallax Star background</a></p>\n<p>This is not exactly <em>'Parallax'</em> but more or less serves the purpose and creates a snowfall effect in the background.</p>\n<h2>Animations</h2>\n<p>I added a few animations to the site as well. You'll find the <strong>Scroll to next page</strong> arrow bouncing up and down. You'll also find the <strong>Social Icons</strong> <em>(GitHub, Twitter, LinkedIn, etc)</em> bounce when you hover over them.</p>\n<p>Somehow, bounce seems to be my favorite animation. <em>'Parallax snowfall'</em> is also an animation but most of it is inspired work.</p>\n<h2>Browser Specific Code</h2>\n<p>While working with animations, I figured out that <strong>Safari does not support smooth scroll</strong> and <strong>FireFox has glitches rendering the snowfall</strong>. So I needed browser specific behavior and ended up creating a react component that renders code for specific browsers.</p>\n<p>You can find the code for the component here - <a href=\"https://github.com/flexdinesh/flexdinesh.github.io/tree/dev/src/components/Browser\">Browser Component</a>. I'm thinking about writing thorough test cases and open-sourcing this component sometime soon.</p>\n<p>It's pretty neat to use the component like this.</p>\n<pre><code class=\"language-html\">&#x3C;Browser except firefox chrome mobile>\n  &#x3C;span>All the magic tricks in this site work best in &#x3C;b>Chrome!&#x3C;/b>&#x3C;/span>\n&#x3C;/Browser>\n&#x3C;Browser only firefox>\n  &#x3C;span>Magic background is disabled in FireFox. Try in &#x3C;b>Chrome!&#x3C;/b>&#x3C;/span>\n&#x3C;/Browser>\n</code></pre>\n<h2>Site is Up and Running</h2>\n<p>I recently re-wrote my portfolio with GatsbyJS - <a href=\"https://dineshpandiyan.com\">Portfolio v3</a>\nI moved the portfolio mentioned in this post here - <a href=\"https://portfoliov2.dineshpandiyan.com/\">Portfolio v2</a></p>\n<p>Link to source code - <a href=\"https://github.com/flexdinesh/flexdinesh.github.io/tree/dev\">React Codebase</a></p>\n<p>I'm still tweaking here and there. The portfolio section clearly needs an upgrade. But most of the design part is done. Feel free to drop a comment on what you think about the site and if there are things that could be improved.</p>\n<p>You are amazing! Have a good day! ✨</p>","frontmatter":{"title":"I Created My Portfolio with React and Some Magic","canonicalURL":"https://dev.to/flexdinesh/i-re-wrote-my-portfolio-and-added-some-magic-22n7","date":"Apr 1, 2018","noPage":null}}},"pageContext":{"slug":"/portfolio-with-react/"}},"staticQueryHashes":["1381026181","3065158460"]}